.PHONY: install build $(NAME) always

top_dir=../../
runtimedir=$(top_dir)/Compiler/runtime/
NAME=OMOptim
LIBNAME=OMOptimLib
DEST=../bin
APP=@APP@
EXE=@EXE@
QMAKE=@QMAKE@

install: build
	if [ "$(APP)" = ".app" ]; then cp -rp $(DEST)/$(NAME).app $(top_dir)/build/Applications/ ; else cp -p $(DEST)/$(NAME) $(top_dir)/build/bin/$(NAME); fi

always:

$(NAME): Makefile $(NAME).config $(LIBNAME)
	$(MAKE) -f Makefile

$(LIBNAME): MakefileLib
	$(MAKE) -f MakefileLib

build: $(LIBNAME) $(NAME)

../Core/OMC/omc_communication.cpp: ../Core/OMC/omc_communication.cc
	ln -s omc_communication.cc $@
../Core/OMC/omc_communication.cc: $(runtimedir)/omc_communication.idl
	@IDLCMD@ $<
	mv omc_communication.cc omc_communication.h ../Core/OMC/
../Core/OMC/omc_communication.h: ../Core/OMC/omc_communication.cc

Makefile: $(NAME).pro $(NAME).config ../Core/OMC/omc_communication.cpp
	$(QMAKE) $< -o $@
MakefileLib: $(LIBNAME).pro $(NAME).config ../Core/OMC/omc_communication.cpp
	$(QMAKE) $< -o $@
Makefile.unix: Makefile.unix.in
	(cd $(top_dir); ./config.status)
$(NAME).config: $(NAME).config.in
	(cd $(top_dir); ./config.status)

clean:
	test ! -f Makefile || $(MAKE) -f Makefile clean
	test ! -f MakefileLib || $(MAKE) -f MakefileLib clean
	rm -rf *.o *.a moc_* OMOptim release/ Makefile MakefileLib  omc_communication.*
